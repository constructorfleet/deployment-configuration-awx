---

awx_admin_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65356234386564633839613038336338343263646339323733653237383933353366363965373438
          6133316230636136313736393833303963343565663233300a353738363532373665633234306337
          63366263663261303939646331313561386630356437653862633839323035393338643031643964
          6164663066626664390a326136633235393766326638333765323434663765376634386635373638
          3732

awx_task_container_name: awx-task
awx_task_container_hostname: awx
awx_web_container_name: awx-web
awx_web_container_hostname: awxweb

awx_notification_email: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          34366534646564656233613832313761636632663566353239663738323735353164633839376535
          3832383836306362643536636265353231363530386631640a643930643731646138616335663961
          31363536333262373163356634646331373233613533383063393765323065383962343664663065
          3230373838663662650a396466393338313964363639326535626432373065353964373132393865
          64363164663336383364636330383631343834326162386538653430366662333237

awx_project_data_dir: /etc/ansible
awx_postgres_data_dir: /var/lib/pgawx

awx_pg_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65393738386262666264343366613236616136653335313233646634323636343064656630646663
          6438613962646133616533643735363333663138643337330a643462656238336230313061303839
          64656463616463363931346264303465346165343136663838353630396636366634613937386537
          6431353133653333610a633130653166313332373634633835306135663935656634336364363564
          6363
awx_pg_admin_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37303764613763626337643866633835373539633433373564393930623337646632383931313632
          3630396338626536313336643965633265666462633537640a383364316461663836396232343734
          66313863386138623265643064366265636663626663303634303161396463393162343734313435
          3036393661663264390a653232383932633233366266393132323538336461623438393165366336
          6435

awx_secret_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          66343139336234623664653633643635633864363361333530323062623761386631363566633765
          6236303739373532343534666135376434656430306536320a626665663833646161646230303466
          61333037396537323739393462303036643030613132626436323036613734313036616366393339
          3837636236373839370a643630356361373032633966656439656335323163613839613530383536
          6661

awx_admin_user: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          66663738633236616563346464303163376364663234313433626130313234663332386465323436
          3664663935356633626332633338643163653233383937350a626163616266373762396639353637
          35656166393634653261376538656330666564333931346132333533333663313737623834343538
          6239393061353437620a383539336364636637623630656565646437343734303133333763316434
          6666
awx_admin_passward: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          63333236663864396130376362636637323438663637333161653965643166306433333261343665
          3865353064326432653430373433613432373433386132660a643064333138313964376564316137
          36636366646461393566393966623136643165663330333035626636343531386466333166343466
          6635343364353236330a656334353035363931666630346539653765313864353936646266366463
          6136
awx_github_deploy_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          63633933313134623366303331356430623237343933303237383761663734613633363161663763
          6361343161366665613166353063336238656531333264300a306461636636346433373432313332
          39633030356561626363613761376235323565396264656135623630343765646465663937656436
          3938303934656563620a363165656637323132656432386633396431653739316362653934616138
          35323030333266346464326333383266303430636333643964336565353834633936333166336361
          6130383832636662343639346131396132626233663166366264
awx_postgresql_version: "10"
awx_postgresql_image: "postgres:{{ awx_postgresql_version }}"

awx_dockerhub_base: ansible
awx_dockerhub_version: 16.0.0
awx_create_preload_data: true

awx_docker_compose_dir: /var/lib/awxcompose
awx_pg_username: awx
awx_pg_database: awx
awx_pg_port: 5432

awx_web_hostname: awxweb
awx_task_hostname: awx

awx_host_config_key: 9931bad6-6526-4bf7-81b0-d56e67df3e00

awx_organizations:
  - name: Default

awx_inventory_scripts:
  - name: 'foreman.py'
    description: 'Foreman Dynamic Inventory'
    script: 'foreman_inventory.py'
    organization: 'Default'

awx_inventory_sources:
## Foreman dynamic inventory
  - name: "foreman.py"
    description: "Foreman Dynamic Inventory"
    inventory: "home.prettybaked.com"
    source: custom
    source_script: "foreman_inventory.py"
    credential: foreman.ini
    overwrite: yes
    overwrite_vars: no
    update_on_launch: yes
    update_cache_timeout: 60

awx_credential_types:
  - name: foreman.ini
    description: Foreman Dynamic Inventory
    kind: cloud
    inputs: "{{ lookup('template', 'awx/foreman_input.yml.j2') | from_yaml }}"
    injectors: "{{ lookup('template', 'awx/foreman_injector.yml.j2') | from_yaml }}"

awx_credentials:
  - name: ansible-root
    credential_type: Machine
    inputs:
      ssh_key_data: '{{ lookup("file", "id_rsa_foreman_proxy") }}'
  - name: ansible-github
    credential_type: GitHub Personal Access Token
    inputs:
      token: '{{ awx_github_deploy_key }}'
  - name: ansible-vault
    credential_type: Vault
    inputs:
      vault_id: 'ansible-vault'
      vault_password: '{{ vault_password }}'
  - name: foreman.ini
    credential_type: foreman.ini
    inputs:
      password: "{{ foreman_username }}"
      username: "{{ foreman_password }}"
      url: "{{ foreman_server_url }}"

awx_ldap_settings:
  - name: SESSION_COOKIE_AGE
    value: "28800"
  - name: AUTH_LDAP_SERVER_URI
    value: 'ldap://{{ ldap_authentication.host }}:389'
  - name: AUTH_LDAP_BIND_DN
    value: '{{ ldap_authentication.account }}'
  - name: AUTH_LDAP_GROUP_TYPE
    value: PosixGroupType
  - name: AUTH_LDAP_USER_SEARCH
    value:
      - '{{ ldap_authentication.users_base}}'
      - SCOPE_SUBTREE
      - (uid=%(user)s)
  - name: AUTH_LDAP_GROUP_SEARCH
    value:
      - '{{ ldap_authentication.groups_base }}'
      - SCOPE_SUBTREE
      - (objectClass=posixGroup)
  - name: AUTH_LDAP_USER_ATTR_MAP
    value:
      first_name: '{{ ldap_authentication.attr_firstname}}'
      last_name: '{{ ldap_authentication.attr_lastname }}'
      email: '{{ ldap_authentication.attr_mail }}'
  - name: AUTH_LDAP_GROUP_TYPE_PARAMS
    value:
      name_attr: cn
  - name: AUTH_LDAP_USER_FLAGS_BY_GROUP
    value:
      is_superuser:
        - 'cn=admin,{{ ldap_authentication.groups_base }}'
  - name: AUTH_LDAP_ORGANIZATION_MAP
    value:
      Default:
        admins: 'cn=admin,{{ ldap_authentication.groups_base }}'
        users: 'cn=users,{{ ldap_authentication.groups_base }}'
        remove_users: false
        remove_admins: false
  - name: AUTH_LDAP_TEAM_MAP
    value:
      LDAP Admins:
        users: 'cn=admin,{{ ldap_authentication.groups_base }}'
        organization: Default
        remove: false
      LDAP Users:
        users: 'cn=users,{{ ldap_authentication.groups_base }}'
        organization: Default
        remove: false
  - name: AUTH_LDAP_BIND_PASSWORD
    value: "{{ ldap_authentication.account_password }}"

#awx_projects:
#  - name: "deployment-configuration-awx"
#    description: "Deploy/Configuration AWX"
#    scm_type: git
#    scm_credential: ansible-github
#    scm_clean: yes
#    scm_branch: master
#    scm_update_on_launch: no
#    scm_url: git@github.com:constructorfleet/deployment-configuration-awx.git
#    local_path: "deployment-configuration-awx"

awx_compose_project:
  - project_name: awx
    pull: yes

    definition:
      version: '3.5'
      x-logging: &default-logging
        driver: journald

      networks:
        awx:
          name: awx
          driver: bridge
          ipam:
            driver: default
            config:
              - subnet: 172.3.27.0/24

      services:
        redis:
          image: redis
          container_name: awx_redis
          restart: unless-stopped
          environment:
            http_proxy: "{{ http_proxy | default('') }}"
            https_proxy: "{{ https_proxy | default('') }}"
            no_proxy: "{{ no_proxy | default('') }}"
          command: ["/usr/local/etc/redis/redis.conf"]
          volumes:
            - "{{ awx_docker_compose_dir }}/redis.conf:/usr/local/etc/redis/redis.conf:ro"
            - "{{ awx_docker_compose_dir }}/redis_socket:/var/run/redis/:rw"
        postgres:
          container_name: awx-postgres
          image: postgres:10
          hostname: awx-postgres
          networks:
            awx:
              aliases:
                - postgres
                - awx_postgres
          volumes:
            - "{{ awx_postgres_data_dir }}/10/data/:/var/lib/postgresql/data/pgdata:Z"
          environment:
            POSTGRES_USER: "{{ awx_pg_username }}"
            POSTGRES_PASSWORD: "{{ awx_pg_password }}"
            POSTGRES_DB: "{{ awx_pg_database }}"
            PGDATA: "/var/lib/postgresql/data/pgdata"
            http_proxy: "{{ http_proxy | default('') }}"
            https_proxy: "{{ https_proxy | default('') }}"
            no_proxy: "{{ no_proxy | default('') }}"
          logging:
            << : *default-logging
            options:
              tag: awx-postgres

        web:
          container_name: awx-web
          image: "{{ awx_dockerhub_base }}/awx:{{ awx_dockerhub_version }}"
          depends_on:
            - redis
            - postgres
          ports:
            - "{{ awx_host_port }}:8052"
          networks:
            awx:
              aliases:
                - web
                - awxweb
                - awx_web
          hostname: awx-web
          user: root
          volumes:
            - "{{ awx_docker_compose_dir }}/SECRET_KEY:/etc/tower/SECRET_KEY"
            - "{{ awx_docker_compose_dir }}/environment.sh:/etc/tower/conf.d/environment.sh"
            - "{{ awx_docker_compose_dir }}/credentials.py:/etc/tower/conf.d/credentials.py"
            - "{{ awx_docker_compose_dir }}/nginx.conf:/etc/nginx/nginx.conf:ro"
            - "{{ awx_docker_compose_dir }}/redis_socket:/var/run/redis/:rw"
            - "{{ awx_project_data_dir }}:/var/lib/awx/projects:rw"
            - '/etc/localtime:/etc/localtime:ro'
          environment:
            http_proxy: "{{ http_proxy | default('') }}"
            https_proxy: "{{ https_proxy | default('') }}"
            no_proxy: "{{ no_proxy | default('') }}"
          logging:
            << : *default-logging
            options:
              tag: awx-web

        task:
          container_name: awx-task
          image: "{{ awx_dockerhub_base }}/awx:{{ awx_dockerhub_version }}"
          depends_on:
            - redis
            - postgres
            - web
          networks:
            awx:
              aliases:
                - task
                - awxtask
                - awx_task
                - awx-task
          hostname: awx
          user: root
          command: /usr/bin/launch_awx_task.sh
          volumes:
            - "{{ awx_docker_compose_dir }}/SECRET_KEY:/etc/tower/SECRET_KEY"
            - "{{ awx_docker_compose_dir }}/environment.sh:/etc/tower/conf.d/environment.sh"
            - "{{ awx_docker_compose_dir }}/credentials.py:/etc/tower/conf.d/credentials.py"
            - "{{ awx_docker_compose_dir }}/nginx.conf:/etc/nginx/nginx.conf:ro"
            - "{{ awx_docker_compose_dir }}/redis_socket:/var/run/redis/:rw"
            - "{{ awx_project_data_dir }}:/var/lib/awx/projects:rw"
            - '/etc/localtime:/etc/localtime:ro'
          environment:
            http_proxy: "{{ http_proxy | default('') }}"
            https_proxy: "{{ https_proxy | default('') }}"
            no_proxy: "{{ no_proxy | default('') }}"
          logging:
            << : *default-logging
            options:
              tag: awx-web